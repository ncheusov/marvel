{"version":3,"file":"static/js/472.fd54eee4.chunk.js","mappings":"4NA2CMA,EAAO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAERC,EAMAD,EANAC,MACAC,EAKAF,EALAE,YACAC,EAIAH,EAJAG,UACAC,EAGAJ,EAHAI,UACAC,EAEAL,EAFAK,SACAC,EACAN,EADAM,MAGJ,OACI,iBAAKC,UAAU,eAAf,WACI,gBAAKC,IAAKJ,EAAWK,IAAKR,EAAOM,UAAU,uBAC3C,iBAAKA,UAAU,qBAAf,WACI,eAAIA,UAAU,qBAAd,SAAoCN,KACpC,cAAGM,UAAU,sBAAb,SAAoCL,KACpC,cAAGK,UAAU,sBAAb,SAAoCJ,KACpC,cAAGI,UAAU,sBAAb,SAAoCF,KACpC,gBAAKE,UAAU,sBAAf,SAAsCD,QAE1C,SAAC,KAAD,CAAMI,GAAG,UAAUH,UAAU,qBAA7B,2BAGX,EAED,EA3DwB,WACpB,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,YAA1B,eAAOb,EAAP,KAAcc,EAAd,KAEA,GAAiDC,EAAAA,EAAAA,KAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,YAElCC,EAAAA,EAAAA,YAAU,WACNC,GAEH,GAAE,CAACV,IAEJ,IAAMU,EAAc,WAChBF,IACAD,EAASP,GACJW,KAAKC,EACb,EAEKA,EAAgB,SAACvB,GACnBc,EAASd,EACZ,EAEKwB,EAAeP,GAAQ,SAACQ,EAAA,EAAD,IAAmB,KAC1CC,EAAUV,GAAU,SAACW,EAAA,EAAD,IAAc,KAClCC,EAAYZ,GAAWC,IAAUjB,EAAkC,MAAzB,SAACD,EAAD,CAAMC,MAAOA,IAE7D,OACI,gCACKwB,EACAE,EACAE,IAGZ,C","sources":["components/pages/SingleComicPage.js"],"sourcesContent":["import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n    const { comicId } = useParams();\n    const [comic, setComic] = useState();\n\n    const { loading, error, getComic, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateComic();\n        // eslint-disable-next-line\n    }, [comicId]);\n\n    const updateComic = () => {\n        clearError();\n        getComic(comicId)\n            .then(onComicLoaded);\n    };\n\n    const onComicLoaded = (comic) => {\n        setComic(comic);\n    };\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\n\n    return (\n        <>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n    );\n}\n\nconst View = ({ comic }) => {\n    const { \n        title, \n        description, \n        pageCount, \n        thumbnail, \n        language, \n        price \n    } = comic;\n\n    return (\n        <div className=\"single-comic\">\n            <img src={thumbnail} alt={title} className=\"single-comic__img\" />\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">{language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    );\n}\n\nexport default SingleComicPage;"],"names":["View","comic","title","description","pageCount","thumbnail","language","price","className","src","alt","to","comicId","useParams","useState","setComic","useMarvelService","loading","error","getComic","clearError","useEffect","updateComic","then","onComicLoaded","errorMessage","ErrorMessage","spinner","Spinner","content"],"sourceRoot":""}